

def print_board(board):

    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_winner(board, player):


    for i in range(3):
        if all([cell == player for cell in board[i]]) or all([board[j][i] == player for j in range(3)]):
            return True
    

    if board[0][0] == player and board[1][1] == player and board[2][2] == player:
        return True
    if board[0][2] == player and board[1][1] == player and board[2][0] == player:
        return True

    return False

def is_board_full(board):

    for row in board:
        if ' ' in row:
            return False
    return True

def tic_tac_toe():

    board = [[' ' for _ in range(3)] for _ in range(3)] 
    current_player = 'X'  
    
    while True:
        print_board(board)
        try:

            row = int(input(f"Player {current_player}, enter the row (0, 1, 2): "))
            col = int(input(f"Player {current_player}, enter the column (0, 1, 2): "))
            
            if board[row][col] != ' ':
                print("Cell is already taken! Try again.")
                continue
        except (ValueError, IndexError):
            print("Invalid input! Please enter a row and column between 0 and 2.")
            continue


        board[row][col] = current_player


        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break


        if is_board_full(board):
            print_board(board)
            print("It's a draw!")
            break


        current_player = 'O' if current_player == 'X' else 'X'


if __name__ == "__main__":
    tic_tac_toe()
